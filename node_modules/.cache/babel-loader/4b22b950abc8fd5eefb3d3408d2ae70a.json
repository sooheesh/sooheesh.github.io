{"ast":null,"code":"import _initializerDefineProperty from\"/Users/song/minesweeper/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"/Users/song/minesweeper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _applyDecoratedDescriptor from\"/Users/song/minesweeper/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"/Users/song/minesweeper/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";var _class,_descriptor,_descriptor2,_descriptor3,_descriptor4,_temp;import{observable,action}from'mobx';export var TimeStore=(_class=(_temp=function TimeStore(){_classCallCheck(this,TimeStore);_initializerDefineProperty(this,\"elapsedTime\",_descriptor,this);_initializerDefineProperty(this,\"initializeTime\",_descriptor2,this);_initializerDefineProperty(this,\"startCountingTime\",_descriptor3,this);_initializerDefineProperty(this,\"stopCountingTime\",_descriptor4,this);},_temp),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"elapsedTime\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return 0;}}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,\"initializeTime\",[action],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){var _this=this;return function(){return _this.elapsedTime=0;};}}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,\"startCountingTime\",[action],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){var _this2=this;return function(){_this2.countTime=setInterval(function(){_this2.elapsedTime++;},1000);};}}),_descriptor4=_applyDecoratedDescriptor(_class.prototype,\"stopCountingTime\",[action],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){var _this3=this;return function(){return clearInterval(_this3.countTime);};}})),_class);","map":{"version":3,"sources":["/Users/song/minesweeper/src/Minesweeper/stores/TimeStore.js"],"names":["observable","action","TimeStore","elapsedTime","countTime","setInterval","clearInterval"],"mappings":"kjBAAA,OAAQA,UAAR,CAAoBC,MAApB,KAAiC,MAAjC,CAGA,UAAaC,CAAAA,SAAb,saACKF,UADL,4FAC8B,EAD9B,+EAGKC,MAHL,2GAIqB,kBAAM,CAAA,KAAI,CAACE,WAAL,CAAmB,CAAzB,EAJrB,kFAMKF,MANL,4GAOwB,WAAM,CACtB,MAAI,CAACG,SAAL,CAAiBC,WAAW,CAAC,UAAM,CAC/B,MAAI,CAACF,WAAL,GACH,CAF2B,CAEzB,IAFyB,CAA5B,CAGH,CAXL,iFAaKF,MAbL,4GAcuB,kBAAMK,CAAAA,aAAa,CAAC,MAAI,CAACF,SAAN,CAAnB,EAdvB","sourcesContent":["import {observable, action} from 'mobx';\n\n\nexport class TimeStore {\n    @observable elapsedTime = 0;\n\n    @action\n    initializeTime = () => this.elapsedTime = 0\n\n    @action\n    startCountingTime = () => {\n        this.countTime = setInterval(() => {\n            this.elapsedTime++;\n        }, 1000);\n    }\n\n    @action\n    stopCountingTime = () => clearInterval(this.countTime)\n\n}"]},"metadata":{},"sourceType":"module"}